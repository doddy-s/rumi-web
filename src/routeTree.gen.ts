/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as WatchConsumetIdImport } from './routes/watch/$consumetId'
import { Route as StreamMalIdImport } from './routes/stream/$malId'
import { Route as AnimeMalIdImport } from './routes/anime/$malId'

// Create Virtual Routes

const AuthRegisterIndexLazyImport = createFileRoute('/_auth/register/')()
const AuthLoginIndexLazyImport = createFileRoute('/_auth/login/')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WatchConsumetIdRoute = WatchConsumetIdImport.update({
  path: '/watch/$consumetId',
  getParentRoute: () => rootRoute,
} as any)

const StreamMalIdRoute = StreamMalIdImport.update({
  path: '/stream/$malId',
  getParentRoute: () => rootRoute,
} as any)

const AnimeMalIdRoute = AnimeMalIdImport.update({
  path: '/anime/$malId',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterIndexLazyRoute = AuthRegisterIndexLazyImport.update({
  path: '/register/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/register/index.lazy').then((d) => d.Route),
)

const AuthLoginIndexLazyRoute = AuthLoginIndexLazyImport.update({
  path: '/login/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/login/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/anime/$malId': {
      id: '/anime/$malId'
      path: '/anime/$malId'
      fullPath: '/anime/$malId'
      preLoaderRoute: typeof AnimeMalIdImport
      parentRoute: typeof rootRoute
    }
    '/stream/$malId': {
      id: '/stream/$malId'
      path: '/stream/$malId'
      fullPath: '/stream/$malId'
      preLoaderRoute: typeof StreamMalIdImport
      parentRoute: typeof rootRoute
    }
    '/watch/$consumetId': {
      id: '/watch/$consumetId'
      path: '/watch/$consumetId'
      fullPath: '/watch/$consumetId'
      preLoaderRoute: typeof WatchConsumetIdImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register/': {
      id: '/_auth/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterIndexLazyImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({
    AuthLoginIndexLazyRoute,
    AuthRegisterIndexLazyRoute,
  }),
  AnimeMalIdRoute,
  StreamMalIdRoute,
  WatchConsumetIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/anime/$malId",
        "/stream/$malId",
        "/watch/$consumetId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login/",
        "/_auth/register/"
      ]
    },
    "/anime/$malId": {
      "filePath": "anime/$malId.tsx"
    },
    "/stream/$malId": {
      "filePath": "stream/$malId.tsx"
    },
    "/watch/$consumetId": {
      "filePath": "watch/$consumetId.tsx"
    },
    "/_auth/login/": {
      "filePath": "_auth/login/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/register/": {
      "filePath": "_auth/register/index.lazy.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
